# Projeto-2
#Otimizando o sistema bancário com funções python
import textwrap

def menu():
    menu = """\n
    ######### MENU ###########
    Informe a opção que deseja realizar
    [1]\tDepositar
    [2]\tSaque
    [3]\tExtrato
    [4]\tNovo Usuário
    [5]\tNova Conta
    [6]\tListar Conta
    [7]\tSair
    """
    return input(menu)
    
def depositar(saldo,valor,extrato,/):
    if valor > 0:
        saldo += valor
        extrato += f"Depósito: R${valor:.2f}\n"
        print ("Depósito realizado com sucesso")
    else:
        print ("Operação falhou, valor inválido")
    return saldo, extrato
 
def sacar (*,saldo, valor, extrato, limite, numero_saque, limite_saques):
    excedeu_saldo = valor > saldo
    excedeu_limite = valor > limite
    excedeu_saques = numero_saque > limite_saques
    if excedeu_saldo:
        print ("Operação falhou: Você não tem saldo suficiente")
    elif excedeu_limite:
        print ("Operação falhou: O valor do saque excedeu o limite")
    elif excedeu_saques:
        print ("Operação falhou: Número máximo de saques realizados")
    elif valor > 0:
        saldo-=valor
        extrato+= f"Saque: R$ {valor:.2f}\n"
        numero_saque += 1
        print ("Saque realizado com sucesso")
    else:
        print("Operação falhou,comando inválido")
    return saldo, extrato
    
def exibir_extrato (saldo,/,*,extrato):
    print("\n############ EXTRATO ################")
    print("Não foram realizadas movimentações." if not extrato else extrato)
    print(f"\n saldo: R${saldo:.2f}")
    
def criar_usuario (cadastro):
    cpf = input ("Informe o seu CPF(somente número): ")
    usuário = filtrar_usuário(cpf, cadastro)
    if usuário:
        print ("Já existe um usuário com esse CPF")
        return
    nome = input ("Informe o seu nome completo: ")
    data_nascimento = input ("Informe a sua data de nascimento (dd-mm-aa): ")
    endereço = input ("Informe o seu endereço (rua, bairro, cidade/sigla do estado: ")
    cadastro.append ({"nome":nome, "data de nascimento":data_nascimento, "cpf":cpf, "endereço":endereço})
    print("Usuário cadastrado com sucesso")

def filtrar_usuário(cpf,cadastro):
    usuarios_filtrados = [usuário for usuário in cadastro if usuário ["cpf"] == cpf]
    return usuarios_filtrados [0] if usuarios_filtrados else None

def criar_conta(agência,número_conta,cadastro):
    cpf = input("Informe o CPF do usuário: ")
    cadastro = filtrar_usuário (cpf, cadastro)
    if cadastro:
        print ("\n Conta criada com sucesso")
        return{"agência":agência,"número da conta":número_conta,"usuário":cadastro}
    print ("Usuário não encontrado, criação da conta encerrada")

def listar_conta(contas):
    for conta in contas:
        linha = f"""Agência:\t{conta['agência']}
    C/C:\t\t{conta['numero_conta']}
    Títular:\t{conta['usuário']['nome']}
    """
    print ("-" * 100)
    print (textwrap.dedent(linha))

def geral():
    LIMITE_SAQUE = 3
    AGÊNCIA = "0001"
    saldo = 0
    limite = 500
    extrato = ""
    numero_saque = 0
    cadastro = []
    contas = []
    
    while True:
        opção = menu()
    
        if opção == "1":
            valor = float(input("Informe o valor do depósito: R$ "))
            saldo, extrato = depositar(saldo, valor, extrato)
        
        elif opção == "2":
            valor = float(input("Qual valor você deseja sacar? R$ "))
            saldo, extrato = sacar(saldo = saldo, valor = valor, limite = 
            limite, extrato=extrato, numero_saque=numero_saque,limite_saques=LIMITE_SAQUE)
         
        elif opção =="3":
            exibir_extrato(saldo,extrato=extrato)

        elif opção =="4":
            criar_usuario(cadastro)

        elif opção =="5":
            número_conta = len(contas)+1
            conta = criar_conta (AGÊNCIA,número_conta,cadastro)
            if conta:
                contas.append(conta)
        
        elif opção =="6":
            listar_conta(contas)
        
        elif opção =="7":
            break

        else:
            print("Operação iválida, verifique novamente")

geral()
            

            
